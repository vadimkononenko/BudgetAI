//
//  DefaultData.swift
//  BudgetAI
//
//  Created by Vadim Kononenko on 16.10.2025.
//

import Foundation

struct CategoryData {
    let name: String
    let colorHex: String
    let icon: String
    let type: String
}

final class DefaultData {

    static let expenseCategories: [CategoryData] = [
        CategoryData(name: "–á–∂–∞", colorHex: "#FF6B6B", icon: "üçî", type: "expense"),
        CategoryData(name: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", colorHex: "#4ECDC4", icon: "üöó", type: "expense"),
        CategoryData(name: "–†–æ–∑–≤–∞–≥–∏", colorHex: "#FFE66D", icon: "üéÆ", type: "expense"),
        CategoryData(name: "–ó–¥–æ—Ä–æ–≤'—è", colorHex: "#95E1D3", icon: "üíä", type: "expense"),
        CategoryData(name: "–ü–æ–∫—É–ø–∫–∏", colorHex: "#FF8B94", icon: "üõçÔ∏è", type: "expense"),
        CategoryData(name: "–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ", colorHex: "#A8E6CF", icon: "üè†", type: "expense"),
        CategoryData(name: "–û—Å–≤—ñ—Ç–∞", colorHex: "#FFDAC1", icon: "üìö", type: "expense"),
        CategoryData(name: "–Ü–Ω—à–µ", colorHex: "#B5B5B5", icon: "üì¶", type: "expense")
    ]

    static let incomeCategories: [CategoryData] = [
        CategoryData(name: "–ó–∞—Ä–ø–ª–∞—Ç–∞", colorHex: "#00D9FF", icon: "üí∞", type: "income"),
        CategoryData(name: "–§—Ä—ñ–ª–∞–Ω—Å", colorHex: "#8AC4FF", icon: "üíª", type: "income"),
        CategoryData(name: "–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó", colorHex: "#B8E986", icon: "üìà", type: "income"),
        CategoryData(name: "–ü–æ–¥–∞—Ä—É–Ω–æ–∫", colorHex: "#FFABAB", icon: "üéÅ", type: "income"),
        CategoryData(name: "–Ü–Ω—à–µ", colorHex: "#D4D4D4", icon: "üíµ", type: "income")
    ]

    static func initializeDefaultCategories() {
        let repository = CoreDataCategoryRepository()

        let existingResult = repository.fetchAllCategories()

        switch existingResult {
        case .success(let existingCategories):
            guard existingCategories.isEmpty else {
                return
            }

            // Create expense categories
            for categoryData in expenseCategories {
                _ = repository.createCategory(
                    name: categoryData.name,
                    colorHex: categoryData.colorHex,
                    icon: categoryData.icon,
                    type: categoryData.type
                )
            }

            // Create income categories
            for categoryData in incomeCategories {
                _ = repository.createCategory(
                    name: categoryData.name,
                    colorHex: categoryData.colorHex,
                    icon: categoryData.icon,
                    type: categoryData.type
                )
            }

            print("‚úÖ Default categories initialized successfully")

        case .failure(let error):
            print("‚ùå Failed to initialize default categories: \(error.localizedDescription)")
        }
    }
}
